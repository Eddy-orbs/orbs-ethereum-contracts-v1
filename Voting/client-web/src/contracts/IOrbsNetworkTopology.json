{
  "contractName": "IOrbsNetworkTopology",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "getNetworkTopology",
      "outputs": [
        {
          "name": "nodeAddresses",
          "type": "address[]"
        },
        {
          "name": "ipAddresses",
          "type": "bytes4[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.3;\n\ninterface IOrbsNetworkTopology {\n    function getNetworkTopology() external returns (address[] memory nodeAddresses, bytes4[] memory ipAddresses);\n}\n\n",
  "sourcePath": "/Users/bolshchikov/Documents/src/github.com/orbs-network/orbs-ethereum-contracts/Voting/ethereum/contracts/IOrbsNetworkTopology.sol",
  "ast": {
    "absolutePath": "/Users/bolshchikov/Documents/src/github.com/orbs-network/orbs-ethereum-contracts/Voting/ethereum/contracts/IOrbsNetworkTopology.sol",
    "exportedSymbols": {
      "IOrbsNetworkTopology": [11]
    },
    "id": 12,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.5", ".3"],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [11],
        "name": "IOrbsNetworkTopology",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getNetworkTopology",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "89:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "name": "nodeAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "110:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "110:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "110:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "name": "ipAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "142:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "142:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 7,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "142:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "109:61:0"
            },
            "scope": 11,
            "src": "62:109:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 12,
        "src": "25:148:0"
      }
    ],
    "src": "0:175:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/bolshchikov/Documents/src/github.com/orbs-network/orbs-ethereum-contracts/Voting/ethereum/contracts/IOrbsNetworkTopology.sol",
    "exportedSymbols": {
      "IOrbsNetworkTopology": [11]
    },
    "id": 12,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.5", ".3"],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [11],
        "name": "IOrbsNetworkTopology",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getNetworkTopology",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "89:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "name": "nodeAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "110:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "110:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "110:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "name": "ipAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "142:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "142:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 7,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "142:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "109:61:0"
            },
            "scope": 11,
            "src": "62:109:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 12,
        "src": "25:148:0"
      }
    ],
    "src": "0:175:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.3+commit.10d17f24.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-02-24T14:09:31.405Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}
